# Cursor Rules for Target System

## General Guidelines
- Use clear, descriptive variable and function names
- Write self-documenting code with meaningful comments when necessary
- Follow consistent indentation (2 spaces for JS/TS/JSON, 4 spaces for Python)
- Keep functions small and focused on a single responsibility
- Use TypeScript for type safety when working with JavaScript

## Code Style
- Use camelCase for variables and functions
- Use PascalCase for classes and components
- Use UPPER_SNAKE_CASE for constants
- Use kebab-case for file names and directories
- Prefer const over let, avoid var
- Use template literals over string concatenation
- Use async/await over promises when possible

## File Organization
- Group related files in appropriate directories
- Use index files for clean imports
- Keep components, utilities, and types in separate folders
- Follow consistent naming conventions for files

## Error Handling
- Always handle errors appropriately
- Use try-catch blocks for async operations
- Provide meaningful error messages
- Log errors for debugging purposes

## Security
- Never commit sensitive information (API keys, passwords, etc.)
- Use environment variables for configuration
- Validate all inputs
- Sanitize user data

## Performance
- Avoid unnecessary re-renders in React components
- Use lazy loading when appropriate
- Optimize images and assets
- Minimize bundle size

## Testing
- Write unit tests for critical functions
- Use descriptive test names
- Test edge cases and error conditions
- Maintain good test coverage

## Documentation
- Update README.md with project information
- Document API endpoints and their usage
- Include setup and installation instructions
- Add inline comments for complex logic

## Git Practices
- Write clear, descriptive commit messages
- Use conventional commit format when possible
- Keep commits atomic and focused
- Use meaningful branch names

## Dependencies
- Keep dependencies up to date
- Remove unused dependencies
- Prefer well-maintained packages
- Document why specific packages were chosen